{"version":3,"sources":["api/lib.ts","images lazy /^/.//.*$/ groupOptions: {} namespace object","api/types.ts","api/actions.ts","api/logic.ts","api/reducers.ts","api/store.ts","components/Settings.tsx","components/Files.tsx","components/Footer.tsx","components/Header.tsx","components/Summary.tsx","components/App.tsx","index.tsx"],"names":["plains","map","n","symbols","symbolsPerCard","generateCards","d","Array","keys","shuffle","flatMap","a","b","c","fileToDataUrl","file","Promise","resolve","reject","reader","FileReader","onerror","onload","result","readAsDataURL","getImageRatio","dataUrl","img","Image","height","width","src","sleep","t","r","setTimeout","generatePdf","images","options","pageWidth","pageHeight","cardRadius","symbolMargin","rotateSymbols","cards","card","s","columnsPerPage","Math","floor","rowsPerPage","cardsPerPage","columnWidth","rowHeight","pdf","JsPDF","chunk","entries","page","pageCards","addPage","i","getCardMiddle","x","y","circle","arrangeSymbolsOnCard","rotateSymbol","addImage","image","base64src","id","symbol","buffer","Buffer","from","split","Jimp","read","then","jimpImage","rotate","rotation","getBase64","err","base64","k1","forEach","k2","getSymbolInRandomPosition","isWithinCircle","areThereCollisions","push","length","Error","some","s2","size","random","max","getRandomImageSize","ratio","createBridge","schema","ajv","Ajv","allErrors","useDefaults","JSONSchemaBridge","validator","compile","model","errors","details","createValidator","webpackAsyncContext","req","__webpack_require__","o","e","code","ids","all","slice","Object","module","exports","APPEND_IMAGES","GENERATE_PDF","GENERATE_PDF_COMPLETE","LOAD_EXAMPLES","REMOVE_ALL","REMOVE_IMAGE","UPLOAD_IMAGES","SET_SETTINGS","appendImages","type","payload","removeAll","uploadImagesLogic","createLogic","process","dispatch","done","action","uniqueId","name","title","generatePdfLogic","latest","validate","allow","getState","processing","settings","catch","alert","message","save","returnPromise","window","open","URL","createObjectURL","output","loadExamplesLogic","obj","exampleFiles","default","initialState","createStore","state","filter","composeWithDevTools","applyMiddleware","createLogicMiddleware","logic","formSchema","properties","connect","setSettings","useState","setOpen","Modal","onClose","onOpen","dimmer","trigger","Button","Icon","Header","Content","AutoForm","onSubmit","Message","success","header","list","loadExamples","uploadImages","files","removeImage","Container","className","Divider","horizontal","Group","primary","as","htmlFor","Or","text","onClick","onChange","target","multiple","style","display","accept","Segment","basic","textAlign","alt","Settings","Footer","inverted","vertical","href","rel","HeaderComponent","content","count","findLastIndex","activePlain","nextPlain","activeProgress","nextProgress","raised","Progress","percent","attached","color","autoSuccess","Subheader","positive","disabled","loading","App","ReactDOM","render","store","document","getElementById"],"mappings":"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I5C,SAASiD,EAAaC,GAC3B,IAAMC,EAAM,IAAIC,IAAI,CAAEC,WAAW,EAAMC,aAAa,IAWpD,OAAO,IAAIC,IAAiBL,EAT5B,SAAyBA,GACvB,IAAMM,EAAYL,EAAIM,QAAQP,GAE9B,OAAO,SAACQ,GAAoC,IAAD,EAEzC,OADAF,EAAUE,IACa,QAAhB,EAAAF,EAAUG,cAAM,aAAhB,EAAkBnB,QAAS,CAAEoB,QAASJ,EAAUG,QAAW,MAIlCE,CAAgBX,O,4CC5QtD,IAAItG,EAAM,CACT,0BAA2B,CAC1B,IACA,EACA,GAED,uBAAwB,CACvB,IACA,EACA,GAED,qBAAsB,CACrB,IACA,EACA,GAED,uBAAwB,CACvB,IACA,EACA,GAED,0BAA2B,CAC1B,IACA,EACA,IAED,oBAAqB,CACpB,IACA,EACA,IAED,wBAAyB,CACxB,IACA,EACA,IAED,oBAAqB,CACpB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,IAED,6BAA8B,CAC7B,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,IAED,oBAAqB,CACpB,IACA,EACA,IAED,wBAAyB,CACxB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,IAED,yBAA0B,CACzB,IACA,EACA,IAED,uBAAwB,CACvB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,IAED,yBAA0B,CACzB,IACA,EACA,IAED,oBAAqB,CACpB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,IAED,4BAA6B,CAC5B,IACA,EACA,IAED,uBAAwB,CACvB,IACA,EACA,IAED,sBAAuB,CACtB,IACA,EACA,IAED,4BAA6B,CAC5B,IACA,EACA,IAED,yBAA0B,CACzB,IACA,EACA,IAED,0BAA2B,CAC1B,IACA,EACA,IAED,yBAA0B,CACzB,IACA,EACA,IAED,wBAAyB,CACxB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,IAED,sBAAuB,CACtB,IACA,EACA,IAED,kCAAmC,CAClC,IACA,EACA,IAED,6BAA8B,CAC7B,IACA,EACA,IAED,wBAAyB,CACxB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,IAED,oBAAqB,CACpB,IACA,EACA,IAED,sBAAuB,CACtB,IACA,EACA,IAED,uBAAwB,CACvB,IACA,EACA,IAED,wBAAyB,CACxB,IACA,EACA,IAED,oBAAqB,CACpB,IACA,EACA,IAED,sBAAuB,CACtB,IACA,EACA,IAED,4BAA6B,CAC5B,IACA,EACA,IAED,uBAAwB,CACvB,IACA,EACA,IAED,2BAA4B,CAC3B,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,IAED,sBAAuB,CACtB,IACA,EACA,IAED,sBAAuB,CACtB,IACA,EACA,IAED,sBAAuB,CACtB,IACA,EACA,IAED,sBAAuB,CACtB,IACA,EACA,IAED,yBAA0B,CACzB,IACA,EACA,IAED,yBAA0B,CACzB,IACA,EACA,IAED,sBAAuB,CACtB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,IAED,uBAAwB,CACvB,IACA,EACA,IAED,wBAAyB,CACxB,IACA,EACA,IAED,sBAAuB,CACtB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,IAED,sBAAuB,CACtB,IACA,EACA,IAED,iBAAkB,CACjB,IACA,GAED,sBAAuB,CACtB,IACA,GAED,yBAA0B,CACzB,IACA,EACA,KAGF,SAASkH,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAErH,EAAKmH,GAC9B,OAAOpG,QAAQC,UAAU8D,MAAK,WAC7B,IAAIwC,EAAI,IAAIzB,MAAM,uBAAyBsB,EAAM,KAEjD,MADAG,EAAEC,KAAO,mBACHD,KAIR,IAAIE,EAAMxH,EAAImH,GAAM7C,EAAKkD,EAAI,GAC7B,OAAOzG,QAAQ0G,IAAID,EAAIE,MAAM,GAAG1H,IAAIoH,EAAoBE,IAAIxC,MAAK,WAChE,OAAOsC,EAAoBpF,EAAEsC,EAAIkD,EAAI,OAGvCN,EAAoB3G,KAAO,WAC1B,OAAOoH,OAAOpH,KAAKP,IAEpBkH,EAAoB5C,GAAK,IACzBsD,EAAOC,QAAUX,G,6NCtTJY,EAAgB,gBAChBC,EAAe,eACfC,EAAwB,wBAC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","file":"static/js/main.37d9f0e5.chunk.js","sourcesContent":["import Ajv, { SchemaObject } from 'ajv';\nimport Jimp from 'jimp';\nimport JsPDF from 'jspdf';\nimport chunk from 'lodash/chunk';\nimport random from 'lodash/random';\nimport shuffle from 'lodash/shuffle';\nimport { JSONSchemaBridge } from 'uniforms-bridge-json-schema';\n\nimport { CardImage, CardSymbol, Prime, Settings } from './types';\n\n/**\n * Generate supported plains (dimensions) according to the Ray-Chaudhuri–Wilson theorem\n * n - prime number\n * @see https://math.stackexchange.com/questions/36798/what-is-the-math-behind-the-game-spot-it\n */\nexport const plains = ([2, 3, 5, 7, 11] as Prime[]).map((n: Prime) => ({\n  n,\n  symbols: n ** 2 + n + 1,\n  symbolsPerCard: n + 1,\n}));\n\n/**\n * Generate unique cards for available plains\n * @see https://math.stackexchange.com/questions/1303497/what-is-the-algorithm-to-generate-the-cards-in-the-game-dobble-known-as-spo\n */\nexport const generateCards = (n: Prime): number[][] => {\n  const d = [...Array(n).keys()];\n\n  return shuffle([\n    shuffle([...d, n]),\n    ...d.flatMap(a => [\n      shuffle([0, ...d.map(b => n + 1 + n * a + b)]),\n      ...d.map(b =>\n        shuffle([a + 1, ...d.map(c => n + 1 + n * c + ((a * c + b) % n))]),\n      ),\n    ]),\n  ]);\n};\n\n/**\n * Promisify the FileReader::readAsDataURL method\n */\nexport const fileToDataUrl = (file: File): Promise<string> =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = reject;\n    reader.onload = () => resolve(reader.result as string);\n    reader.readAsDataURL(file);\n  });\n\n/**\n * Promisify the FileReader::readAsDataURL method\n */\nexport const getImageRatio = (dataUrl: string): Promise<number> =>\n  new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onerror = reject;\n    img.onload = () => resolve(img.height / img.width);\n    img.src = dataUrl;\n  });\n\n/**\n * Unlock event loop and wait\n */\nexport const sleep = (t = 0): Promise<never> =>\n  new Promise(r => setTimeout(r, t));\n\n/**\n * Generate PDF instance with cards\n */\nexport const generatePdf = async (\n  images: CardImage[] = [],\n  options: { n: Prime } & Settings,\n): Promise<JsPDF> => {\n  const {\n    n, // No of plains\n    pageWidth = 210, // A4\n    pageHeight = 297, // A4\n    cardRadius = 42, // Size of a single card\n    symbolMargin = -0.1, // Percent of card radius; value is negative to allow overlap since rotated symbols are smaller\n    rotateSymbols = true, // Whether the symbols should be randomly rotated\n  } = options;\n\n  // Apply images to generated card sequences\n  const cards = generateCards(n).map(card => card.map(s => images[s]));\n\n  // PDF sizes in mm\n  const columnsPerPage = Math.floor(pageWidth / (cardRadius * 2));\n  const rowsPerPage = Math.floor(pageHeight / (cardRadius * 2));\n  const cardsPerPage = columnsPerPage * rowsPerPage;\n  const columnWidth = pageWidth / columnsPerPage;\n  const rowHeight = pageHeight / rowsPerPage;\n\n  const pdf = new JsPDF();\n\n  // Split cards into pages\n  for (const [page, pageCards] of chunk(cards, cardsPerPage).entries()) {\n    if (page > 0) {\n      pdf.addPage();\n    }\n\n    for (const [i, card] of pageCards.entries()) {\n      const { x, y } = getCardMiddle(i, columnWidth, rowHeight);\n\n      // Draw outline\n      pdf.circle(x, y, cardRadius, 'S');\n\n      const symbols = arrangeSymbolsOnCard(card, symbolMargin, n);\n\n      // Add symbols to pdf\n      for (let s of symbols) {\n        if (rotateSymbols) {\n          s = await rotateSymbol(s);\n        }\n        pdf.addImage(\n          s.image.base64src,\n          'PNG',\n          x + s.x * cardRadius,\n          y + s.y * cardRadius,\n          cardRadius * s.width,\n          cardRadius * s.height,\n          s.image.id,\n          'NONE',\n          0,\n        );\n      }\n    }\n  }\n\n  return pdf;\n};\n\nconst rotateSymbol = (symbol: CardSymbol) =>\n  new Promise<CardSymbol>((resolve, reject) => {\n    const image = symbol.image;\n    const buffer = Buffer.from(image.base64src.split(',')[1], 'base64');\n    void Jimp.read(buffer).then(jimpImage => {\n      jimpImage\n        .rotate(symbol.rotation)\n        .getBase64('image/png', (err, base64) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve({\n              ...symbol,\n              image: {\n                ...image,\n                base64src: base64,\n              },\n            });\n          }\n        });\n    });\n  });\n\nfunction arrangeSymbolsOnCard(\n  card: CardImage[],\n  symbolMargin: number,\n  n: number,\n) {\n  const symbols: CardSymbol[] = [];\n  // Brute-force it until it will look good :)\n  let k1 = 500;\n  while (k1-- > 0) {\n    card.forEach(image => {\n      let k2 = 100;\n      while (k2-- > 0) {\n        const s = getSymbolInRandomPosition(image, k2, n);\n\n        // Test if element is within the circle\n        if (isWithinCircle(s)) {\n          continue;\n        }\n        // Test if there is no collision with other symbols\n        if (areThereCollisions(symbols, s, symbolMargin)) {\n          continue;\n        }\n        // Everything ok, add it to the collection\n        symbols.push(s);\n        break;\n      }\n    });\n\n    if (symbols.length !== n + 1) {\n      // Not able to generate a layout, start from scratch:\n      symbols.length = 0;\n      continue;\n    }\n\n    // Everything ok\n    break;\n  }\n\n  if (symbols.length !== n + 1) {\n    throw new Error('Could not generate a possible card layout');\n  }\n  return symbols;\n}\n\nconst isWithinCircle = (s: CardSymbol): boolean => {\n  return (\n    (s.x + s.width) ** 2 + s.y ** 2 > 1 ||\n    (s.x + s.width) ** 2 + (s.y + s.height) ** 2 > 1 ||\n    s.x ** 2 + s.y ** 2 > 1 ||\n    s.x ** 2 + (s.y + s.height) ** 2 > 1\n  );\n};\n\nfunction areThereCollisions(\n  symbols: CardSymbol[],\n  s: CardSymbol,\n  symbolMargin: number,\n) {\n  return symbols.some(\n    s2 =>\n      s.x - symbolMargin < s2.x + s2.width &&\n      s.x + s.width + symbolMargin > s2.x &&\n      s.y - symbolMargin < s2.y + s2.height &&\n      s.y + s.height + symbolMargin > s2.y,\n  );\n}\n\nfunction getSymbolInRandomPosition(image: CardImage, k2: number, n: number) {\n  const size = getRandomImageSize(k2, n);\n\n  const s: CardSymbol = {\n    x: random(-1, 1 - size, true),\n    y: random(-1, 1 - size, true),\n    rotation: random(0, 359, false),\n    width: size * image.ratio,\n    height: size * image.ratio,\n    image,\n  };\n  return s;\n}\n\nfunction getRandomImageSize(k2: number, n: number) {\n  return random(\n    // Try a smaller image after each iteration, up to some limit\n    Math.max((0.6 * k2) / 100, 0.3),\n    // Limit upper size for high n values\n    n < 7 ? 1 : 0.8,\n  );\n}\n\nfunction getCardMiddle(\n  i: number,\n  columnWidth: number,\n  rowHeight: number,\n): { x: number; y: number } {\n  return {\n    x: (i % 2) * columnWidth + columnWidth / 2,\n    y: Math.floor(i / 2) * rowHeight + rowHeight / 2,\n  };\n}\n\nexport function createBridge(schema: SchemaObject): JSONSchemaBridge {\n  const ajv = new Ajv({ allErrors: true, useDefaults: true });\n\n  function createValidator(schema: SchemaObject) {\n    const validator = ajv.compile(schema);\n\n    return (model: Record<string, unknown>) => {\n      validator(model);\n      return validator.errors?.length ? { details: validator.errors } : null;\n    };\n  }\n\n  return new JSONSchemaBridge(schema, createValidator(schema));\n}\n","var map = {\n\t\"./animals/alligator.png\": [\n\t\t848,\n\t\t9,\n\t\t6\n\t],\n\t\"./animals/badger.png\": [\n\t\t849,\n\t\t9,\n\t\t7\n\t],\n\t\"./animals/bear.png\": [\n\t\t850,\n\t\t9,\n\t\t8\n\t],\n\t\"./animals/budgie.png\": [\n\t\t851,\n\t\t9,\n\t\t9\n\t],\n\t\"./animals/bumblebee.png\": [\n\t\t852,\n\t\t9,\n\t\t10\n\t],\n\t\"./animals/cat.png\": [\n\t\t853,\n\t\t9,\n\t\t11\n\t],\n\t\"./animals/chicken.png\": [\n\t\t854,\n\t\t9,\n\t\t12\n\t],\n\t\"./animals/cow.png\": [\n\t\t855,\n\t\t9,\n\t\t13\n\t],\n\t\"./animals/crab.png\": [\n\t\t856,\n\t\t9,\n\t\t14\n\t],\n\t\"./animals/cute-hamster.png\": [\n\t\t857,\n\t\t9,\n\t\t15\n\t],\n\t\"./animals/deer.png\": [\n\t\t858,\n\t\t9,\n\t\t16\n\t],\n\t\"./animals/dog.png\": [\n\t\t859,\n\t\t9,\n\t\t17\n\t],\n\t\"./animals/dolphin.png\": [\n\t\t860,\n\t\t9,\n\t\t18\n\t],\n\t\"./animals/dove.png\": [\n\t\t861,\n\t\t9,\n\t\t19\n\t],\n\t\"./animals/elephant.png\": [\n\t\t862,\n\t\t9,\n\t\t20\n\t],\n\t\"./animals/falcon.png\": [\n\t\t863,\n\t\t9,\n\t\t21\n\t],\n\t\"./animals/fish.png\": [\n\t\t864,\n\t\t9,\n\t\t22\n\t],\n\t\"./animals/flamingo.png\": [\n\t\t865,\n\t\t9,\n\t\t23\n\t],\n\t\"./animals/fox.png\": [\n\t\t866,\n\t\t9,\n\t\t24\n\t],\n\t\"./animals/frog.png\": [\n\t\t867,\n\t\t9,\n\t\t25\n\t],\n\t\"./animals/grasshopper.png\": [\n\t\t868,\n\t\t9,\n\t\t26\n\t],\n\t\"./animals/hornet.png\": [\n\t\t869,\n\t\t9,\n\t\t27\n\t],\n\t\"./animals/horse.png\": [\n\t\t870,\n\t\t9,\n\t\t28\n\t],\n\t\"./animals/hummingbird.png\": [\n\t\t871,\n\t\t9,\n\t\t29\n\t],\n\t\"./animals/kangaroo.png\": [\n\t\t872,\n\t\t9,\n\t\t30\n\t],\n\t\"./animals/kiwi-bird.png\": [\n\t\t873,\n\t\t9,\n\t\t31\n\t],\n\t\"./animals/ladybird.png\": [\n\t\t874,\n\t\t9,\n\t\t32\n\t],\n\t\"./animals/leopard.png\": [\n\t\t875,\n\t\t9,\n\t\t33\n\t],\n\t\"./animals/lion.png\": [\n\t\t876,\n\t\t9,\n\t\t34\n\t],\n\t\"./animals/llama.png\": [\n\t\t877,\n\t\t9,\n\t\t35\n\t],\n\t\"./animals/monarch-butterfly.png\": [\n\t\t878,\n\t\t9,\n\t\t36\n\t],\n\t\"./animals/mouse-animal.png\": [\n\t\t879,\n\t\t9,\n\t\t37\n\t],\n\t\"./animals/octopus.png\": [\n\t\t880,\n\t\t9,\n\t\t38\n\t],\n\t\"./animals/orca.png\": [\n\t\t881,\n\t\t9,\n\t\t39\n\t],\n\t\"./animals/owl.png\": [\n\t\t882,\n\t\t9,\n\t\t40\n\t],\n\t\"./animals/panda.png\": [\n\t\t883,\n\t\t9,\n\t\t41\n\t],\n\t\"./animals/parrot.png\": [\n\t\t884,\n\t\t9,\n\t\t42\n\t],\n\t\"./animals/peacock.png\": [\n\t\t885,\n\t\t9,\n\t\t43\n\t],\n\t\"./animals/pig.png\": [\n\t\t886,\n\t\t9,\n\t\t44\n\t],\n\t\"./animals/prawn.png\": [\n\t\t887,\n\t\t9,\n\t\t45\n\t],\n\t\"./animals/puffin-bird.png\": [\n\t\t888,\n\t\t9,\n\t\t46\n\t],\n\t\"./animals/rabbit.png\": [\n\t\t889,\n\t\t9,\n\t\t47\n\t],\n\t\"./animals/rhinoceros.png\": [\n\t\t890,\n\t\t9,\n\t\t48\n\t],\n\t\"./animals/seal.png\": [\n\t\t891,\n\t\t9,\n\t\t49\n\t],\n\t\"./animals/sheep.png\": [\n\t\t892,\n\t\t9,\n\t\t50\n\t],\n\t\"./animals/sloth.png\": [\n\t\t893,\n\t\t9,\n\t\t51\n\t],\n\t\"./animals/snail.png\": [\n\t\t894,\n\t\t9,\n\t\t52\n\t],\n\t\"./animals/snake.png\": [\n\t\t895,\n\t\t9,\n\t\t53\n\t],\n\t\"./animals/squirrel.png\": [\n\t\t896,\n\t\t9,\n\t\t54\n\t],\n\t\"./animals/starfish.png\": [\n\t\t897,\n\t\t9,\n\t\t55\n\t],\n\t\"./animals/stork.png\": [\n\t\t898,\n\t\t9,\n\t\t56\n\t],\n\t\"./animals/swan.png\": [\n\t\t899,\n\t\t9,\n\t\t57\n\t],\n\t\"./animals/turtle.png\": [\n\t\t900,\n\t\t9,\n\t\t58\n\t],\n\t\"./animals/unicorn.png\": [\n\t\t901,\n\t\t9,\n\t\t59\n\t],\n\t\"./animals/whale.png\": [\n\t\t902,\n\t\t9,\n\t\t60\n\t],\n\t\"./animals/wolf.png\": [\n\t\t903,\n\t\t9,\n\t\t61\n\t],\n\t\"./animals/zebra.png\": [\n\t\t904,\n\t\t9,\n\t\t62\n\t],\n\t\"./exampleFiles\": [\n\t\t229,\n\t\t3\n\t],\n\t\"./exampleFiles.json\": [\n\t\t229,\n\t\t3\n\t],\n\t\"./ui/remove-cursor.png\": [\n\t\t905,\n\t\t9,\n\t\t63\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(2).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 780;\nmodule.exports = webpackAsyncContext;","// Redux store state\nexport interface State {\n  images: CardImage[];\n  processing: boolean;\n  settings: Settings;\n}\n\n// Possible redux action types\nexport const APPEND_IMAGES = 'APPEND_IMAGES';\nexport const GENERATE_PDF = 'GENERATE_PDF';\nexport const GENERATE_PDF_COMPLETE = 'GENERATE_PDF_COMPLETE';\nexport const LOAD_EXAMPLES = 'LOAD_EXAMPLES';\nexport const REMOVE_ALL = 'REMOVE_ALL';\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport const UPLOAD_IMAGES = 'UPLOAD_IMAGES';\nexport const SET_SETTINGS = 'SET_SETTINGS';\n\n// Payload types\nexport type Prime = 2 | 3 | 5 | 7 | 11;\n\nexport interface Settings {\n  pageWidth: number; // Page width in mm\n  pageHeight: number; // Page height in mm\n  cardRadius: number; // Size of a single card\n  symbolMargin: number; // Percent of card radius\n  rotateSymbols: boolean; // Whether the symbols should be randomly rotated\n}\n\nexport interface CardImage {\n  base64src: string;\n  id: string;\n  ratio: number;\n  title?: string;\n}\n\nexport interface CardSymbol {\n  image: CardImage;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  rotation: number;\n}\n\n// Action types\nexport interface AppendImagesAction {\n  type: typeof APPEND_IMAGES;\n  payload: CardImage[];\n}\n\nexport interface GeneratePdfAction {\n  type: typeof GENERATE_PDF;\n  payload: {\n    n: Prime;\n  };\n}\n\nexport interface GeneratePdfCompleteAction {\n  type: typeof GENERATE_PDF_COMPLETE;\n}\n\nexport interface LoadExamplesAction {\n  type: typeof LOAD_EXAMPLES;\n}\n\nexport interface RemoveAllAction {\n  type: typeof REMOVE_ALL;\n}\n\nexport interface RemoveImageAction {\n  type: typeof REMOVE_IMAGE;\n  payload: string;\n}\n\nexport interface UploadImagesAction {\n  type: typeof UPLOAD_IMAGES;\n  payload: File[];\n}\nexport interface SetSettingsAction {\n  type: typeof SET_SETTINGS;\n  payload: Partial<Settings>;\n}\n\nexport type Actions =\n  | AppendImagesAction\n  | GeneratePdfAction\n  | GeneratePdfCompleteAction\n  | LoadExamplesAction\n  | RemoveAllAction\n  | RemoveImageAction\n  | UploadImagesAction\n  | SetSettingsAction;\n","import {\n  APPEND_IMAGES,\n  AppendImagesAction,\n  CardImage,\n  GENERATE_PDF,\n  GENERATE_PDF_COMPLETE,\n  GeneratePdfAction,\n  GeneratePdfCompleteAction,\n  LOAD_EXAMPLES,\n  LoadExamplesAction,\n  Prime,\n  REMOVE_ALL,\n  REMOVE_IMAGE,\n  RemoveAllAction,\n  RemoveImageAction,\n  SET_SETTINGS,\n  SetSettingsAction,\n  Settings,\n  UPLOAD_IMAGES,\n  UploadImagesAction,\n} from './types';\n\nexport const appendImages = (images: CardImage[]): AppendImagesAction => ({\n  type: APPEND_IMAGES,\n  payload: images,\n});\n\nexport const generatePdf = (n: Prime): GeneratePdfAction => ({\n  type: GENERATE_PDF,\n  payload: { n },\n});\n\nexport const generatePdfComplete = (): GeneratePdfCompleteAction => ({\n  type: GENERATE_PDF_COMPLETE,\n});\n\nexport const loadExamples = (): LoadExamplesAction => ({\n  type: LOAD_EXAMPLES,\n});\n\nexport const removeAll = (): RemoveAllAction => ({\n  type: REMOVE_ALL,\n});\n\nexport const removeImage = (id: string): RemoveImageAction => ({\n  type: REMOVE_IMAGE,\n  payload: id,\n});\n\nexport const uploadImages = (files: FileList | null): UploadImagesAction => ({\n  type: UPLOAD_IMAGES,\n  payload: files ? [...files] : [],\n});\n\nexport const setSettings = (\n  settings: Partial<Settings>,\n): SetSettingsAction => ({\n  type: SET_SETTINGS,\n  payload: settings,\n});\n","import shuffle from 'lodash/shuffle';\nimport uniqueId from 'lodash/uniqueId';\nimport { createLogic, Logic } from 'redux-logic';\n\nimport exampleFiles from '../images/exampleFiles.json';\nimport { appendImages, generatePdfComplete, removeAll } from './actions';\nimport { fileToDataUrl, generatePdf, getImageRatio, sleep } from './lib';\nimport {\n  CardImage,\n  GENERATE_PDF,\n  GeneratePdfAction,\n  LOAD_EXAMPLES,\n  State,\n  UPLOAD_IMAGES,\n  UploadImagesAction,\n} from './types';\n\nexport const uploadImagesLogic = createLogic({\n  type: UPLOAD_IMAGES,\n  async process({ action }: { action: UploadImagesAction }, dispatch, done) {\n    const images: CardImage[] = await Promise.all(\n      action.payload.map(async image => {\n        const base64src = await fileToDataUrl(image);\n        return {\n          base64src,\n          id: uniqueId('image_'),\n          ratio: await getImageRatio(base64src),\n          title: image.name,\n        };\n      }),\n    );\n\n    dispatch(appendImages(images));\n    done();\n  },\n});\n\nexport const generatePdfLogic = createLogic({\n  type: GENERATE_PDF,\n  latest: true,\n  validate(\n    { action, getState }: { action: GeneratePdfAction; getState: () => State },\n    allow,\n    reject,\n  ) {\n    const { processing } = getState();\n    if (processing) {\n      // Allow only single operation at a time\n      reject(action);\n    } else {\n      allow(action);\n    }\n  },\n  async process(\n    { action, getState }: { action: GeneratePdfAction; getState: () => State },\n    dispatch,\n    done,\n  ) {\n    const { settings, images } = getState();\n\n    // Unlock the thread before heavy computations starts\n    await sleep(100);\n\n    const pdf = await generatePdf(images, {\n      ...settings,\n      ...action.payload,\n    }).catch((err: Error) => alert(err.message));\n\n    if (pdf) {\n      if (process.env.NODE_ENV === 'production') {\n        // Force file download\n        await pdf.save('Cards.pdf', { returnPromise: true });\n      } else {\n        // Easier mode to preview during development\n        window.open(URL.createObjectURL(pdf.output('blob')));\n      }\n    }\n\n    dispatch(generatePdfComplete());\n    done();\n  },\n});\n\nexport const loadExamplesLogic = createLogic({\n  type: LOAD_EXAMPLES,\n  latest: true,\n  async process(obj, dispatch, done) {\n    dispatch(removeAll());\n\n    const images: CardImage[] = await Promise.all(\n      shuffle(exampleFiles).map(async file => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        const base64src = (await import(`../images/${file}`)).default as string;\n        return {\n          base64src,\n          id: uniqueId('image_'),\n          ratio: await getImageRatio(base64src),\n          title: file,\n        };\n      }),\n    );\n\n    dispatch(appendImages(images));\n    done();\n  },\n});\n\nexport default [\n  uploadImagesLogic,\n  generatePdfLogic,\n  loadExamplesLogic,\n] as Logic[];\n","import {\n  Actions,\n  APPEND_IMAGES,\n  GENERATE_PDF,\n  GENERATE_PDF_COMPLETE,\n  REMOVE_ALL,\n  REMOVE_IMAGE,\n  SET_SETTINGS,\n  State,\n} from './types';\n\nconst initialState: State = {\n  images: [],\n  processing: false,\n  settings: {\n    pageWidth: 210, // A4\n    pageHeight: 297, // A4\n    cardRadius: 42, // Size of a single card\n    symbolMargin: -0.1, // Percent of card radius\n    rotateSymbols: true, // Whether the symbols should be randomly rotated\n  },\n};\n\nexport default function reducer(state = initialState, action: Actions): State {\n  switch (action.type) {\n    case APPEND_IMAGES:\n      return {\n        ...state,\n        images: [...state.images, ...action.payload],\n      };\n    case GENERATE_PDF:\n      return {\n        ...state,\n        processing: true,\n      };\n    case GENERATE_PDF_COMPLETE:\n      return {\n        ...state,\n        processing: false,\n      };\n    case REMOVE_ALL:\n      return {\n        ...state,\n        images: [],\n      };\n    case REMOVE_IMAGE:\n      return {\n        ...state,\n        images: state.images.filter(image => image.id !== action.payload),\n      };\n    case SET_SETTINGS:\n      return {\n        ...state,\n        settings: {\n          ...state.settings,\n          ...action.payload,\n        },\n      };\n    default:\n      return state;\n  }\n}\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createLogicMiddleware } from 'redux-logic';\n\nimport logic from './logic';\nimport reducers from './reducers';\n\nexport type State = ReturnType<typeof reducers>;\n\nexport default createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(createLogicMiddleware(logic))),\n);\n","import React, { FC, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Icon, Modal, Message } from 'semantic-ui-react';\nimport { AutoForm } from 'uniforms-semantic';\n\nimport { setSettings } from '../api/actions';\nimport { createBridge } from '../api/lib';\nimport { State } from '../api/store';\nimport { Settings } from '../api/types';\n\nconst formSchema = createBridge({\n  title: 'Settings',\n  type: 'object',\n  properties: {\n    pageWidth: { type: 'integer' },\n    pageHeight: { type: 'integer' },\n    cardRadius: { type: 'number' },\n    symbolMargin: { type: 'number' },\n    rotateSymbols: { type: 'boolean' },\n  },\n});\n\ninterface Props {\n  settings: Settings;\n  setSettings: typeof setSettings;\n}\n\nconst SettingsComponent: FC<Props> = ({ settings, setSettings }) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      dimmer=\"blurring\"\n      trigger={\n        <Button>\n          <Icon name=\"cog\" />\n          Settings\n        </Button>\n      }\n    >\n      <Modal.Header>Adjust settings for the print</Modal.Header>\n      <Modal.Content>\n        <AutoForm\n          schema={formSchema}\n          model={settings}\n          onSubmit={model => {\n            setSettings(model);\n            setOpen(false);\n          }}\n        />\n        <Message\n          success\n          header=\"Tips:\"\n          list={[\n            'Page sizes and card radius are in millimeters',\n            'Symbol margin is a percentage of a symbol that should be left as a margin between other symbols',\n            'If you rotate symbols, the margin value should be negative to allow overlap since rotated symbols are smaller',\n            'Experiment and see what fit best for your pictures!',\n          ]}\n        />\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default connect((state: State) => ({ settings: state.settings }), {\n  setSettings,\n})(SettingsComponent);\n","import React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Button,\n  Container,\n  Divider,\n  Icon,\n  Image,\n  Segment,\n} from 'semantic-ui-react';\n\nimport {\n  loadExamples,\n  removeAll,\n  removeImage,\n  uploadImages,\n} from '../api/actions';\nimport { State } from '../api/store';\nimport { CardImage } from '../api/types';\nimport Settings from './Settings';\n\ninterface Props {\n  images: CardImage[];\n  loadExamples: typeof loadExamples;\n  removeAll: typeof removeAll;\n  removeImage: typeof removeImage;\n  uploadImages: typeof uploadImages;\n}\n\nconst Files: FC<Props> = ({\n  images,\n  loadExamples,\n  removeAll,\n  removeImage,\n  uploadImages,\n}) => (\n  <Container className=\"pusher\">\n    <Divider horizontal>\n      <Button.Group size=\"huge\">\n        <Button primary as=\"label\" htmlFor=\"fileUpload\">\n          <Icon name=\"cloud upload\" />\n          Upload images\n        </Button>\n        <Button.Or text=\"or\" />\n        <Button onClick={loadExamples}>\n          <Icon name=\"images outline\" />\n          Load examples\n        </Button>\n      </Button.Group>\n    </Divider>\n\n    <input\n      type=\"file\"\n      id=\"fileUpload\"\n      onChange={e => uploadImages(e.target.files)}\n      multiple\n      style={{ display: 'none' }}\n      accept=\".png,.jpg,.jpeg\"\n    />\n\n    <Segment basic textAlign=\"center\">\n      <Image.Group size=\"tiny\">\n        {images.map(({ id, base64src, title }) => (\n          <Image\n            key={id}\n            src={base64src}\n            onClick={() => removeImage(id)}\n            className=\"preview\"\n            title={title}\n            alt={title}\n          />\n        ))}\n      </Image.Group>\n      {images.length > 0 && (\n        <>\n          <Button onClick={removeAll}>\n            <Icon name=\"trash\" />\n            Remove all images\n          </Button>\n          <Settings />\n        </>\n      )}\n    </Segment>\n  </Container>\n);\n\nexport default connect((state: State) => ({ images: state.images }), {\n  removeAll,\n  loadExamples,\n  uploadImages,\n  removeImage,\n})(Files);\n","import React from 'react';\nimport { Container, Segment } from 'semantic-ui-react';\n\nconst Footer = () => (\n  <Segment inverted vertical className=\"footer\">\n    <Container text textAlign=\"center\">\n      This site is not affiliated in any way with Dobble, Spot It!, its creators\n      or distributors.\n      <br />\n      Dobble and Spot It! are trademarks of ASMODEE GROUP.\n      <br />\n      Example images by{' '}\n      <a href=\"https://icons8.com/\" target=\"_blank\" rel=\"noreferrer\">\n        icons8.com\n      </a>\n    </Container>\n  </Segment>\n);\n\nexport default Footer;\n","import React from 'react';\nimport { Container, Header, Segment } from 'semantic-ui-react';\n\nconst HeaderComponent = () => (\n  <Segment inverted textAlign=\"center\" vertical className=\"header\">\n    <Container text>\n      <Header\n        as=\"h1\"\n        content=\"Dobble-like generator\"\n        inverted\n        className=\"title\"\n      />\n      <Header\n        as=\"h2\"\n        content=\"Prepare and print cards with your own images\"\n        inverted\n        className=\"subtitle\"\n      />\n    </Container>\n  </Segment>\n);\n\nexport default HeaderComponent;\n","import findLastIndex from 'lodash/findLastIndex';\nimport React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Button,\n  Container,\n  Divider,\n  Header,\n  Icon,\n  Progress,\n  Segment,\n} from 'semantic-ui-react';\n\nimport { generatePdf } from '../api/actions';\nimport { plains } from '../api/lib';\nimport { State } from '../api/store';\nimport { CardImage } from '../api/types';\n\ninterface Props {\n  images: CardImage[];\n  plains: typeof plains;\n  processing: boolean;\n  generatePdf: typeof generatePdf;\n}\n\nconst Summary: FC<Props> = ({ images, plains, processing, generatePdf }) => {\n  const count = images.length;\n\n  const i = findLastIndex(plains, ({ symbols }) => count >= symbols);\n\n  const activePlain = plains[i] || null;\n  const nextPlain = plains[i + 1] || null;\n\n  const activeProgress = (count / (activePlain || nextPlain).symbols) * 100;\n  const nextProgress = nextPlain ? (count / nextPlain.symbols) * 100 : 100;\n\n  return (\n    <Container>\n      <Segment textAlign=\"center\" raised>\n        <Progress\n          percent={activeProgress}\n          attached=\"top\"\n          color=\"blue\"\n          autoSuccess\n        />\n        <Progress\n          percent={nextProgress}\n          attached=\"bottom\"\n          color=\"blue\"\n          autoSuccess\n        />\n\n        {activePlain && (\n          <>\n            <Header as=\"h1\" className=\"instructions\">\n              You can generate {activePlain.symbols} cards with{' '}\n              {activePlain.symbolsPerCard} images per card.\n              {count > activePlain.symbols && (\n                <Header.Subheader>\n                  You have uploaded too much images. Last{' '}\n                  {count - activePlain.symbols} images will not be used.\n                </Header.Subheader>\n              )}\n            </Header>\n            <Button\n              size=\"massive\"\n              positive\n              disabled={processing}\n              onClick={() => generatePdf(activePlain.n)}\n            >\n              <Icon loading={processing} name=\"file pdf outline\" />\n              Generate and download PDF file\n            </Button>\n          </>\n        )}\n\n        {activePlain && nextPlain && (\n          <Divider horizontal className=\"padded\">\n            Or\n          </Divider>\n        )}\n\n        {nextPlain && (\n          <Header as=\"h3\" className=\"instructions\">\n            Add {nextPlain.symbols - count} more images to generate{' '}\n            {nextPlain.symbols} cards with {nextPlain.symbolsPerCard} images per\n            card\n          </Header>\n        )}\n      </Segment>\n    </Container>\n  );\n};\n\nexport default connect(\n  (state: State) => ({\n    images: state.images,\n    plains,\n    processing: state.processing,\n  }),\n  { generatePdf },\n)(Summary);\n","import React from 'react';\n\nimport Files from './Files';\nimport Footer from './Footer';\nimport Header from './Header';\nimport Summary from './Summary';\n\nconst App = () => (\n  <>\n    <Header />\n    <Files />\n    <Summary />\n    <Footer />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './api/store';\nimport App from './components/App';\nimport './styles.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}